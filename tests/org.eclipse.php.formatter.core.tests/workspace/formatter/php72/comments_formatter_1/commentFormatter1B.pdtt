--TEST--
Test formatting for comments
Bug 367584 - Possible NPE in PHPDocTag
Bug 521884 - Code Formatter: comma after final array element for multi-line array definition
--FILE--
<?php
use \MyProject\Sub\Level\ { function MyAlias, const MyNamespace as OtherAlias, MyOtherNamespace, };
use function \MyProject\Sub\Level\ { MyAlias, MyNamespace as OtherAlias, MyOtherNamespace, };
$e = array (
       array('level'=>'INFO'),
       // TODO comment
       array('level'=>'INFO'),
);
$e = foo (
       array('level'=>'INFO'),
       // TODO comment
       array('level'=>'INFO'),
);
$e = $obj->foo (
       array('level'=>'INFO'),
       // TODO comment
       array('level'=>'INFO'),
);
/**
 * @param
 */
function foo (int $a, int $b){
}
/**
 * Object allocation arguments
 */
class Example {
	function foo() {
		return new Example ( 100, 200, 300, 400, 500, 600, 700, 800, 900, );
	}
}
?>
--EXPECT--
<?php
use MyProject\Sub\Level\ {
    function MyAlias,
    const MyNamespace as OtherAlias,
    MyOtherNamespace,
};
use function MyProject\Sub\Level\ {
    MyAlias,
    MyNamespace as OtherAlias,
    MyOtherNamespace,
};
$e = array(array('level' => 'INFO'), 
// TODO comment
array('level' => 'INFO'),);
$e = foo(array('level' => 'INFO'), 
// TODO comment
array('level' => 'INFO'),);
$e = $obj->foo(array('level' => 'INFO'), 
// TODO comment
array('level' => 'INFO'),);
/**
 *
 * @param
 */
function foo (int $a, int $b)
{}
/**
 * Object allocation arguments
 */
class Example
{
    function foo ()
    {
        return new Example(100, 200, 300, 400, 500, 600, 700, 800, 900,);
    }
}
?>