--TEST--

--FILE--
FILENAME://testRenameTraitMember.php
<?php
trait RenameTraitMember{
	public function fun1(){
	}
	public function fun2() {
	}
	public function fun3() {
	}
	public $a;
	private $b;
	public $c;
}
class RenameTraitMember_class {
	use RenameTraitMember{
		fun1 as public;
		a as a1;
	}
	use RenameTraitMember{
		RenameTraitMember::fun2 as public fun4;
		b as public b1;
	}
}
$a = new RenameTraitMember_class();
$a->fun|1();
$a->fun4();
$a->fun3();
$a->b1;
$a->a1;
$a->c;
?>
--CONFIG--
newName:fun11
updateTextualMatches:false
--EXPECT--
FILENAME://testRenameTraitMember.php
<?php
trait RenameTraitMember{
	public function fun11(){
	}
	public function fun2() {
	}
	public function fun3() {
	}
	public $a;
	private $b;
	public $c;
}
class RenameTraitMember_class {
	use RenameTraitMember{
		fun11 as public;
		a as a1;
	}
	use RenameTraitMember{
		RenameTraitMember::fun2 as public fun4;
		b as public b1;
	}
}
$a = new RenameTraitMember_class();
$a->fun11();
$a->fun4();
$a->fun3();
$a->b1;
$a->a1;
$a->c;
?>