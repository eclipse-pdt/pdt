--TEST--
Bug 551434 - false syntax error for Heredoc/Nowdoc expressions
--FILE--
<?php
class nowdocDemo {
    
    const EXAMPLE_1 = <<< 'NOWDOC'
Example string literal #1
    
-
NOWDOC;
    
    const EXAMPLE_2 = <<< 'NOWDOC'
Example string literal #2
    
-
NOWDOC;
    
    const EXAMPLE_3 = <<< 'NOWDOC'
Example string literal #3
    
=
NOWDOC;
    
    const EXAMPLE_4 = <<< 'NOWDOC'
Example string literal #4
    
-
NOWDOC;
    
    const EXAMPLE_5 = <<< "NOWDOC"
Example string literal #5

-
NOWDOC;
    
    const EXAMPLE_6 = <<< 'NOWDOC'
Example string literal #6
    
-
NOWDOC;
    
    const EXAMPLE_7 = <<< 'NOWDOC'
Example string literal #7
Another line with some content
Yet another line with some content
Another
    
-
NOWDOC;
    
    const EXAMPLE_8 = <<< 'NOWDOC'
Example string literal #8
    
- Content after the special char
NOWDOC;
    
    public $example9 = <<< 'NOWDOC'
Example string literal #9
    
-
NOWDOC;
    
    public function __construct() {
        
        $example10 = <<< 'NOWDOC'
Example string literal #10
    
-
NOWDOC;
        
        var_dump(
            <<< 'NOWDOC'
Example string literal #11
            
-
NOWDOC
            );
        
        <<< 'NOWDOC'
Example string literal
    
-
NOWDOC  && 1;
    }
}
?>
--EXPECT--
<ModuleDeclaration start="0" end="1183">
	<ClassDeclaration start="6" end="1179" modifiers="" name="nowdocDemo">
		<ConstantDeclaration start="34" end="104" modifiers="">
			<ConstantReference start="40" end="49" name="EXAMPLE_1">
			</ConstantReference>
			<Quote start="52" end="104" type="nowdoc">
				<Scalar start="72" end="98" type="string" value=" string literal #1
    
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="115" end="185" modifiers="">
			<ConstantReference start="121" end="130" name="EXAMPLE_2">
			</ConstantReference>
			<Quote start="133" end="185" type="nowdoc">
				<Scalar start="153" end="179" type="string" value=" string literal #2
    
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="196" end="266" modifiers="">
			<ConstantReference start="202" end="211" name="EXAMPLE_3">
			</ConstantReference>
			<Quote start="214" end="266" type="nowdoc">
				<Scalar start="234" end="260" type="string" value=" string literal #3
    
=
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="277" end="347" modifiers="">
			<ConstantReference start="283" end="292" name="EXAMPLE_4">
			</ConstantReference>
			<Quote start="295" end="347" type="nowdoc">
				<Scalar start="315" end="341" type="string" value=" string literal #4
    
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="358" end="424" modifiers="">
			<ConstantReference start="364" end="373" name="EXAMPLE_5">
			</ConstantReference>
			<Quote start="376" end="424" type="heredoc">
				<Scalar start="396" end="418" type="string" value=" string literal #5
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="435" end="505" modifiers="">
			<ConstantReference start="441" end="450" name="EXAMPLE_6">
			</ConstantReference>
			<Quote start="453" end="505" type="nowdoc">
				<Scalar start="473" end="499" type="string" value=" string literal #6
    
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="516" end="660" modifiers="">
			<ConstantReference start="522" end="531" name="EXAMPLE_7">
			</ConstantReference>
			<Quote start="534" end="660" type="nowdoc">
				<Scalar start="646" end="654" type="string" value="
    
-
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<ConstantDeclaration start="671" end="772" modifiers="">
			<ConstantReference start="677" end="686" name="EXAMPLE_8">
			</ConstantReference>
			<Quote start="689" end="772" type="nowdoc">
				<Scalar start="709" end="766" type="string" value=" string literal #8
    
- Content after the special char
">
				</Scalar>
			</Quote>
		</ConstantDeclaration>
		<PHPFieldDeclaration start="790" end="854" modifiers="public">
			<SimpleReference start="790" end="799" name="$example9">
			</SimpleReference>
			<Quote start="802" end="854" type="nowdoc">
				<Scalar start="822" end="848" type="string" value=" string literal #9
    
-
">
				</Scalar>
			</Quote>
		</PHPFieldDeclaration>
		<PHPMethodDeclaration start="865" end="1177" modifiers="public" name="__construct">
			<ExpressionStatement start="914" end="981">
				<Assignment start="914" end="980" operator="=">
					<VariableReference start="914" end="924" name="$example10">
					</VariableReference>
					<Quote start="927" end="980" type="nowdoc">
						<Scalar start="947" end="974" type="string" value=" string literal #10
    
-
">
						</Scalar>
					</Quote>
				</Assignment>
			</ExpressionStatement>
			<ExpressionStatement start="999" end="1097">
				<PHPCallExpression start="999" end="1096">
					<FullyQualifiedReference start="999" end="1007" name="var_dump">
					</FullyQualifiedReference>
					<PHPCallArgumentsList start="1008" end="1095">
						<Quote start="1021" end="1082" type="nowdoc">
							<Scalar start="1041" end="1076" type="string" value=" string literal #11
            
-
">
							</Scalar>
						</Quote>
					</PHPCallArgumentsList>
				</PHPCallExpression>
			</ExpressionStatement>
			<ExpressionStatement start="1115" end="1171">
				<InfixExpression start="1115" end="1170" operator="&amp;&amp;">
					<Quote start="1115" end="1164" type="nowdoc">
						<Scalar start="1135" end="1158" type="string" value=" string literal
    
-
">
						</Scalar>
					</Quote>
					<Scalar start="1169" end="1170" type="int" value="1">
					</Scalar>
				</InfixExpression>
			</ExpressionStatement>
		</PHPMethodDeclaration>
	</ClassDeclaration>
	<EmptyStatement start="1180" end="1182">
	</EmptyStatement>
</ModuleDeclaration>
