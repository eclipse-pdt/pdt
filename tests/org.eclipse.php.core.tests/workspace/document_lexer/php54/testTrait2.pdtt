--TEST--
Test Abs Class
--FILE--
<?php 
class Base {
    public function sayHello() {
        echo 'Hello ';
    }
}

trait SayWorld {
    public function sayHello() {
        parent::sayHello();
        echo 'World!';
    }
}

class MyHelloWorld extends Base {
    use SayWorld;
}

$o = new MyHelloWorld();
$o->sayHello();
?>
--EXPECT--
PHP_TOKEN|<|2
PHP_TOKEN|?|2
PHP_LABEL|php|2
WHITESPACE| 
|2
PHP_CLASS|class|2
WHITESPACE| |2
PHP_LABEL|Base|2
WHITESPACE| |2
PHP_CURLY_OPEN|{
    |2
PHP_PUBLIC|public|2
WHITESPACE| |2
PHP_FUNCTION|function|2
WHITESPACE| |2
PHP_LABEL|sayHello|2
PHP_TOKEN|(|2
PHP_TOKEN|)|2
WHITESPACE| |2
PHP_CURLY_OPEN|{
        |2
PHP_ECHO|echo|2
WHITESPACE| |2
PHP_CONSTANT_ENCAPSED_STRING|'Hello '|2
PHP_SEMICOLON|;|2
WHITESPACE|
    |2
PHP_CURLY_CLOSE|}
|2
PHP_CURLY_CLOSE|}
|2
PHP_TRAIT|trait|2
WHITESPACE| |2
PHP_LABEL|SayWorld|2
WHITESPACE| |2
PHP_CURLY_OPEN|{
    |2
PHP_PUBLIC|public|2
WHITESPACE| |2
PHP_FUNCTION|function|2
WHITESPACE| |2
PHP_LABEL|sayHello|2
PHP_TOKEN|(|2
PHP_TOKEN|)|2
WHITESPACE| |2
PHP_CURLY_OPEN|{
        |2
PHP_PARENT|parent|2
PHP_PAAMAYIM_NEKUDOTAYIM|::|2
PHP_LABEL|sayHello|2
PHP_TOKEN|(|2
PHP_TOKEN|)|2
PHP_SEMICOLON|;|2
WHITESPACE|
        |2
PHP_ECHO|echo|2
WHITESPACE| |2
PHP_CONSTANT_ENCAPSED_STRING|'World!'|2
PHP_SEMICOLON|;|2
WHITESPACE|
    |2
PHP_CURLY_CLOSE|}
|2
PHP_CURLY_CLOSE|}
|2
PHP_CLASS|class|2
WHITESPACE| |2
PHP_LABEL|MyHelloWorld|2
WHITESPACE| |2
PHP_EXTENDS|extends|2
WHITESPACE| |2
PHP_LABEL|Base|2
WHITESPACE| |2
PHP_CURLY_OPEN|{
    |2
PHP_USE|use|2
WHITESPACE| |2
PHP_LABEL|SayWorld|2
PHP_SEMICOLON|;|2
WHITESPACE|
|2
PHP_CURLY_CLOSE|}
|2
PHP_VARIABLE|$o|2
WHITESPACE| |2
PHP_TOKEN|=|2
WHITESPACE| |2
PHP_NEW|new|2
WHITESPACE| |2
PHP_LABEL|MyHelloWorld|2
PHP_TOKEN|(|2
PHP_TOKEN|)|2
PHP_SEMICOLON|;|2
WHITESPACE|
|2
PHP_VARIABLE|$o|2
PHP_OBJECT_OPERATOR|->|22
PHP_LABEL|sayHello|2
PHP_TOKEN|(|2
PHP_TOKEN|)|2
PHP_SEMICOLON|;|2
WHITESPACE|
|2
PHP_CLOSETAG|?>|2
