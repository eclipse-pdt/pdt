--TEST--
Bug 480280 - No error for non-abstract method with no body
--FILE--
<?php 
trait Trait1 {
    function foo1();

    /* no error check will be done here */
    abstract function foo2();

    abstract function foo3() {
    	$a = 0;
    }
}

class MyClass1 {
    use Trait1;

    function foo1();

    abstract function foo2();

    abstract function foo3() {
    	$a = 0;
    }
}

abstract class MyClass2 {
    use Trait1;

    function foo1();

    abstract function foo2() {
    	$a = 0;
    }
}

interface MyInterface1 {

    function foo1();
    
    function foo2() {
        $a = 0;
    }
}
?>
--EXPECT--
[line=6, start=35, end=39] This method requires a body instead of a semicolon
[line=11, start=140, end=144] Abstract methods do not specify a body
[line=11, start=140, end=144] The abstract method foo3 in type Trait1 can only be defined by an abstract class
[line=18, start=218, end=222] This method requires a body instead of a semicolon
[line=20, start=177, end=185] The type MyClass1 must be an abstract class to define abstract methods
[line=20, start=249, end=253] The abstract method foo2 in type MyClass1 can only be defined by an abstract class
[line=23, start=177, end=185] The type MyClass1 must be an abstract class to define abstract methods
[line=23, start=280, end=284] Abstract methods do not specify a body
[line=23, start=280, end=284] The abstract method foo3 in type MyClass1 can only be defined by an abstract class
[line=30, start=367, end=371] This method requires a body instead of a semicolon
[line=33, start=398, end=402] Abstract methods do not specify a body
[line=42, start=494, end=498] Abstract methods do not specify a body
